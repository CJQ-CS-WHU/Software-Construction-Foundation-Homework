<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>早知今日 - 博客园</title>
    <link rel="shortcut icon" href="//common.cnblogs.com/favicon.ico?v=20200522" type="image/x-icon" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=KCO3_f2W_TC__-jZ7phSnmoFkQuWMJH2yAgA16eE3eY" />
    <link id="MainCss" rel="stylesheet" href="/skins/custom/bundle-custom.min.css?v=1ssrnY3Il79Ok472qeVrpxlSprSXcHhYPgZC5S3wtVM" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/heartlake/custom.css?v=7rnz5TtMcHt9VmgMA7H/K8T8fSI=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/custom/bundle-custom-mobile.min.css?v=-Yh290MhQyDeXLmvKTSses9H6-49lqbpXFh55zvS0w8" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/heartlake/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/heartlake/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/heartlake/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=6bwfCY2e02dLOXNW99G2BHZkYFmw9QyYTWeJ-W-sudo"></script>
    <script>
        var currentBlogId = 301623;
        var currentBlogApp = 'heartlake';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'Custom';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/heartlake/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/heartlake/">旧</a>
</h1>
<h2>
变而新
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>

</li>
<li>


</li>
<li>
</li>
<li>

<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
23&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
9</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/28.html">2020年5月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12980009.html">
    自定义ClassLoader
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：简单地纯粹地记录下如何进行自定义一个自己的ClassLoader 什么双亲委派模型啊，双亲委派模型的破坏啊，好处啊，缺点啊什么的，一概不说。 自定义ClassLoader的博客啥的，看过不少，但是就是没自己亲手写一下，今天尝试写一下，发现古人诚不欺我！ 纸上得来终觉浅，绝知此事要躬行 失败版本 最开            <a href="https://www.cnblogs.com/heartlake/p/12980009.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-28 12:39
早知今日
<span class="post-view-count">阅读(135)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12980009" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/27.html">2020年5月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12974265.html">
    简说Spring中的资源加载 
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：声明： 本文若有 任何纰漏、错误，请不吝指正！谢谢！ 问题描述 遇到一个关于资源加载的问题，因此简单的记录一下，对Spring资源加载也做一个记录。 问题起因是使用了@PropertySource来进行配置文件加载，配置路径时，没有使用关键字classpath来指明从classpath下面来查找配置            <a href="https://www.cnblogs.com/heartlake/p/12974265.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-27 16:51
早知今日
<span class="post-view-count">阅读(131)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12974265" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/26.html">2020年5月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12967231.html">
     SpringBoot外部化配置使用Plus版
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本文如有任何纰漏、错误，请不吝指正！ PS: 之前写过一篇关于SpringBoo中使用配置文件的一些姿势，不过嘛，有句话（我）说的好：曾见小桥流水，未睹观音坐莲！所以再写一篇增强版，以便记录。 序言 上一篇博客记录，主要集中在具体的配置内容，也就是使用@ConfigurationProperties            <a href="https://www.cnblogs.com/heartlake/p/12967231.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-26 18:19
早知今日
<span class="post-view-count">阅读(215)</span><text> </text>
<span class="post-comment-count">评论(2)</span><text> </text>
<span class="post-digg-count">推荐(2)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12967231" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/22.html">2020年5月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12936633.html">
    让SpringBoot自动化配置不再神秘
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本文若有任何纰漏、错误，还请不吝指出！ 注：本文提到的Spring容器或者Bean容器，或者Spring Bean容器，都是指同一个事情，那就是代指BeanFactory。关于BeanFactory，后面有机会会再说下。 花絮 几年前接触过 ，跑过Demo，当时刚入行，连 都没搞明白，更别说 了，就            <a href="https://www.cnblogs.com/heartlake/p/12936633.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-22 13:32
早知今日
<span class="post-view-count">阅读(395)</span><text> </text>
<span class="post-comment-count">评论(1)</span><text> </text>
<span class="post-digg-count">推荐(2)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12936633" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/18.html">2020年5月18日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12909362.html">
    Spring处理@Configuration的分析
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Spring处理@Configuration的分析 声明：本文若有任何纰漏、错误，还请不吝指出！ 序言 注解在 中作用很大，且不说 中的外部化配置，一些第三方组件也是通过这个注解完成整合的，常用的比如说 ，就是利用了 这个注解来实现的。 在注解类中，还可以使用 的方式向 容器中，注入一些我们自定义的            <a href="https://www.cnblogs.com/heartlake/p/12909362.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-18 11:02
早知今日
<span class="post-view-count">阅读(246)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12909362" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/16.html">2020年5月16日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12899952.html">
    关于SpringBoot的外部化配置使用记录
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：关于SpringBoot的外部化配置使用记录 声明: 若有任何纰漏、错误请不吝指出! 更新: 工作中突然想起来，关于Yaml的使用，并不属于Spring的范畴，是org.yaml.snakeyaml处理的。所以yaml的使用应该参考 &quot;官方&quot; ，不过貌似打不开。。。 Spring利用snakeyam            <a href="https://www.cnblogs.com/heartlake/p/12899952.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-16 12:44
早知今日
<span class="post-view-count">阅读(153)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12899952" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/09.html">2020年5月9日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12855653.html">
    深入理解Mybatis插件
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Mybatis插件实现原理 本文如有任何纰漏、错误，请不吝指出，谢谢！ 首先，我并没有使用过 Mybatis的插件，但是这个和我写这篇文章并不冲突，估计能真正使用到插件的人也比较少，写这篇文章的目的主要是看源码时稍微看到了下它的插件实现，发现还挺绕的，于是就特意琢磨了下，然后留了一个记录。 中的插件            <a href="https://www.cnblogs.com/heartlake/p/12855653.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-09 10:15
早知今日
<span class="post-view-count">阅读(239)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12855653" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/06.html">2020年5月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12837620.html">
    MySQL JDBC Driver 8.0+设置服务器时区
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：遇到一个问题，线下环境测试数据的查询完全没有问题，但是线上环境却没法查询出数据，并且从 输出的日志来看，查询参数也没有问题，数据库中数据也是存在的，查询参数类型是 。 而且 还很迷的输出了这么一句 ，这行日志是在对 开启 才会输出的 于是，想破了头，一心想着是不是 在查询结果后，从查询结果集到实体类            <a href="https://www.cnblogs.com/heartlake/p/12837620.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-06 17:18
早知今日
<span class="post-view-count">阅读(112)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12837620" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/05/04.html">2020年5月4日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12825995.html">
    重新认识Java注解
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：重新认识Java注解 今天Debug看源码的时候，无意间看到这么个东西 首先承认我的无知，看到这个我很惊诧。 也勾起了我的好奇心，于是有了这篇认知记录。 下面就来重新认识下注解吧！ 注解的本质 关于运行时注解的信息，会在 文件中，并且最终以运行时数据结构存储在 ，也知道我们是可以通过 对象或者 对象            <a href="https://www.cnblogs.com/heartlake/p/12825995.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-04 11:56
早知今日
<span class="post-view-count">阅读(157)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12825995" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/heartlake/archive/2020/04/29.html">2020年4月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/heartlake/p/12805535.html">
    深入理解Java枚举
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：深入理解Java枚举 ~~重新认识Java枚举~~ 老实说，挺羞愧的，这么久了，一直不知道Java枚举的本质是啥，虽然也在用，但是真不知道它的底层是个啥样的 直到2020年4月28日的晚上20点左右，我才真的揭开了Java枚举的面纱，看到了它的真面目，但是我哭了 缘起 在几个月以前，遇到需要自定义一            <a href="https://www.cnblogs.com/heartlake/p/12805535.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-29 22:40
早知今日
<span class="post-view-count">阅读(56)</span><text> </text>
<span class="post-comment-count">评论(1)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12805535" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/heartlake/default.html?page=2">
        下一页
    </a>

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 早知今日
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>